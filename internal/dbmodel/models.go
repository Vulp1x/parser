// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0

package dbmodel

import (
	"time"

	"github.com/google/uuid"
)

type Blogger struct {
	ID                     uuid.UUID     `json:"id"`
	DatasetID              uuid.UUID     `json:"dataset_id"`
	Username               string        `json:"username"`
	UserID                 int64         `json:"user_id"`
	FollowersCount         int64         `json:"followers_count"`
	IsInitial              bool          `json:"is_initial"`
	CreatedAt              time.Time     `json:"created_at"`
	ParsedAt               *time.Time    `json:"parsed_at"`
	UpdatedAt              *time.Time    `json:"updated_at"`
	Parsed                 bool          `json:"parsed"`
	IsCorrect              bool          `json:"is_correct"`
	IsPrivate              bool          `json:"is_private"`
	IsVerified             bool          `json:"is_verified"`
	IsBusiness             bool          `json:"is_business"`
	FollowingsCount        int32         `json:"followings_count"`
	ContactPhoneNumber     *string       `json:"contact_phone_number"`
	PublicPhoneNumber      *string       `json:"public_phone_number"`
	PublicPhoneCountryCode *string       `json:"public_phone_country_code"`
	CityName               *string       `json:"city_name"`
	PublicEmail            *string       `json:"public_email"`
	Status                 bloggerStatus `json:"status"`
}

type Bot struct {
	ID          uuid.UUID  `json:"id"`
	Username    string     `json:"username"`
	SessionID   string     `json:"session_id"`
	Proxy       Proxy      `json:"proxy"`
	IsBlocked   bool       `json:"is_blocked"`
	CreatedAt   time.Time  `json:"created_at"`
	UpdatedAt   *time.Time `json:"updated_at"`
	DeletedAt   *time.Time `json:"deleted_at"`
	LockedUntil *time.Time `json:"locked_until"`
}

type Dataset struct {
	ID               uuid.UUID     `json:"id"`
	PhoneCode        *int32        `json:"phone_code"`
	Status           datasetStatus `json:"status"`
	Title            string        `json:"title"`
	ManagerID        uuid.UUID     `json:"manager_id"`
	CreatedAt        time.Time     `json:"created_at"`
	StartedAt        *time.Time    `json:"started_at"`
	StoppedAt        *time.Time    `json:"stopped_at"`
	UpdatedAt        *time.Time    `json:"updated_at"`
	DeletedAt        *time.Time    `json:"deleted_at"`
	PostsPerBlogger  int32         `json:"posts_per_blogger"`
	LikedPerPost     int32         `json:"liked_per_post"`
	CommentedPerPost int32         `json:"commented_per_post"`
}

type Target struct {
	ID         uuid.UUID  `json:"id"`
	DatasetID  uuid.UUID  `json:"dataset_id"`
	Username   string     `json:"username"`
	UserID     int64      `json:"user_id"`
	Status     int16      `json:"status"`
	CreatedAt  time.Time  `json:"created_at"`
	UpdatedAt  *time.Time `json:"updated_at"`
	IsPrivate  bool       `json:"is_private"`
	IsVerified bool       `json:"is_verified"`
	FullName   string     `json:"full_name"`
}
